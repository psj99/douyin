// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"douyin/conf"
	"douyin/internal/handler"
	"douyin/internal/repository"
	"douyin/internal/router"
	"douyin/internal/service"
	"douyin/pkg/helper/sid"
	"douyin/pkg/jwt"
	"douyin/pkg/log"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewApp(config *conf.Config, logger *log.Logger) (*gin.Engine, func(), error) {
	jwtJWT := jwt.NewJwt(config)
	handlerHandler := handler.NewHandler(logger)
	sidSid := sid.NewSid()
	serviceService := service.NewService(logger, sidSid, jwtJWT)
	db := repository.NewDB(config)
	client := repository.NewRedis(config)
	repositoryRepository := repository.NewRepository(db, client, logger)
	userRepository := repository.NewUserRepository(repositoryRepository)
	userService := service.NewUserService(serviceService, userRepository)
	userHandler := handler.NewUserHandler(handlerHandler, userService)
	engine := router.NewRouter(logger, jwtJWT, userHandler)
	return engine, func() {
	}, nil
}

// wire.go:

var HandlerSet = wire.NewSet(handler.NewHandler, handler.NewUserHandler)

var ServiceSet = wire.NewSet(service.NewService, service.NewUserService)

var RepositorySet = wire.NewSet(repository.NewDB, repository.NewRedis, repository.NewRepository, repository.NewUserRepository)
